// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: two_factor.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Proto {

  /// <summary>Holder for reflection information generated from two_factor.proto</summary>
  public static partial class TwoFactorReflection {

    #region Descriptor
    /// <summary>File descriptor for two_factor.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TwoFactorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChB0d29fZmFjdG9yLnByb3RvEgVwcm90bxoMY29tbW9uLnByb3RvIjwKCUZh",
            "Y3RvclJlcRIOCgZ1c2VySWQYASABKAMSHwoEdHlwZRgCIAEoDjIRLnByb3Rv",
            "LkZhY3RvclR5cGUiSAoHSW5mb1JlcRIOCgZ1c2VySWQYASABKAMSHwoEdHlw",
            "ZRgCIAEoDjIRLnByb3RvLkZhY3RvclR5cGUSDAoEY29kZRgDIAEoCSJYCg1G",
            "YWN0b3JMaXN0UmVxEg0KBWVtYWlsGAEgASgJEhEKCWVtYWlsQ29kZRgCIAEo",
            "CRIRCglwaG9uZUNvZGUYAyABKAkSEgoKZ29vZ2xlQ29kZRgEIAEoCSIiChJW",
            "ZXJpZnlGYWN0b3JzUmVwbHkSDAoEY29kZRgBIAEoCSIdCgtWZXJpZnlSZXBs",
            "eRIOCgZyZXN1bHQYASABKAgihwEKC0ZhY3RvclJlcGx5EgoKAmlkGAEgASgD",
            "Eg4KBnVzZXJJZBgCIAEoAxIMCgRjb2RlGAMgASgJEiMKCWFjdGl2YXRlZBgE",
            "IAEoDjIQLnByb3RvLkJvb2xWYWx1ZRIUCgxsYXN0VmVyaWZ5QXQYBSABKAkS",
            "EwoLcmVmcmVzaGVkQXQYBiABKAkyvgIKEFR3b0ZhY3RvclNlcnZpY2USOAoO",
            "R2VuZXJhdGVGYWN0b3ISEC5wcm90by5GYWN0b3JSZXEaEi5wcm90by5GYWN0",
            "b3JSZXBseSIAEjUKC1F1ZXJ5RmFjdG9yEhAucHJvdG8uRmFjdG9yUmVxGhIu",
            "cHJvdG8uRmFjdG9yUmVwbHkiABI3Cg1SZWZyZXNoRmFjdG9yEhAucHJvdG8u",
            "RmFjdG9yUmVxGhIucHJvdG8uRmFjdG9yUmVwbHkiABI4ChBWZXJpZnlGYWN0",
            "b3JDb2RlEg4ucHJvdG8uSW5mb1JlcRoSLnByb3RvLlZlcmlmeVJlcGx5IgAS",
            "RgoRVmVyaWZ5VXNlckZhY3RvcnMSFC5wcm90by5GYWN0b3JMaXN0UmVxGhku",
            "cHJvdG8uVmVyaWZ5RmFjdG9yc1JlcGx5IgBiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Proto.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.FactorReq), global::Proto.FactorReq.Parser, new[]{ "UserId", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.InfoReq), global::Proto.InfoReq.Parser, new[]{ "UserId", "Type", "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.FactorListReq), global::Proto.FactorListReq.Parser, new[]{ "Email", "EmailCode", "PhoneCode", "GoogleCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.VerifyFactorsReply), global::Proto.VerifyFactorsReply.Parser, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.VerifyReply), global::Proto.VerifyReply.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.FactorReply), global::Proto.FactorReply.Parser, new[]{ "Id", "UserId", "Code", "Activated", "LastVerifyAt", "RefreshedAt" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FactorReq : pb::IMessage<FactorReq> {
    private static readonly pb::MessageParser<FactorReq> _parser = new pb::MessageParser<FactorReq>(() => new FactorReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FactorReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.TwoFactorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FactorReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FactorReq(FactorReq other) : this() {
      userId_ = other.userId_;
      type_ = other.type_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FactorReq Clone() {
      return new FactorReq(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private long userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Proto.FactorType type_ = 0;
    /// <summary>
    ///验证类型 邮件，手机和google二次认证
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.FactorType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FactorReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FactorReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Type != other.Type) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0L) hash ^= UserId.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserId);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserId);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FactorReq other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0L) {
        UserId = other.UserId;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UserId = input.ReadInt64();
            break;
          }
          case 16: {
            type_ = (global::Proto.FactorType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InfoReq : pb::IMessage<InfoReq> {
    private static readonly pb::MessageParser<InfoReq> _parser = new pb::MessageParser<InfoReq>(() => new InfoReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InfoReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.TwoFactorReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoReq(InfoReq other) : this() {
      userId_ = other.userId_;
      type_ = other.type_;
      code_ = other.code_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoReq Clone() {
      return new InfoReq(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private long userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Proto.FactorType type_ = 0;
    /// <summary>
    ///验证类型 邮件，手机和google二次认证
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.FactorType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 3;
    private string code_ = "";
    /// <summary>
    ///验证码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InfoReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InfoReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Type != other.Type) return false;
      if (Code != other.Code) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0L) hash ^= UserId.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserId);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Code);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserId);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InfoReq other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0L) {
        UserId = other.UserId;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UserId = input.ReadInt64();
            break;
          }
          case 16: {
            type_ = (global::Proto.FactorType) input.ReadEnum();
            break;
          }
          case 26: {
            Code = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FactorListReq : pb::IMessage<FactorListReq> {
    private static readonly pb::MessageParser<FactorListReq> _parser = new pb::MessageParser<FactorListReq>(() => new FactorListReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FactorListReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.TwoFactorReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FactorListReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FactorListReq(FactorListReq other) : this() {
      email_ = other.email_;
      emailCode_ = other.emailCode_;
      phoneCode_ = other.phoneCode_;
      googleCode_ = other.googleCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FactorListReq Clone() {
      return new FactorListReq(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    private string email_ = "";
    /// <summary>
    ///用户email
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "emailCode" field.</summary>
    public const int EmailCodeFieldNumber = 2;
    private string emailCode_ = "";
    /// <summary>
    ///Email验证码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EmailCode {
      get { return emailCode_; }
      set {
        emailCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "phoneCode" field.</summary>
    public const int PhoneCodeFieldNumber = 3;
    private string phoneCode_ = "";
    /// <summary>
    ///手机验证码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PhoneCode {
      get { return phoneCode_; }
      set {
        phoneCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "googleCode" field.</summary>
    public const int GoogleCodeFieldNumber = 4;
    private string googleCode_ = "";
    /// <summary>
    ///Google验证码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GoogleCode {
      get { return googleCode_; }
      set {
        googleCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FactorListReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FactorListReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Email != other.Email) return false;
      if (EmailCode != other.EmailCode) return false;
      if (PhoneCode != other.PhoneCode) return false;
      if (GoogleCode != other.GoogleCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (EmailCode.Length != 0) hash ^= EmailCode.GetHashCode();
      if (PhoneCode.Length != 0) hash ^= PhoneCode.GetHashCode();
      if (GoogleCode.Length != 0) hash ^= GoogleCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Email.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Email);
      }
      if (EmailCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EmailCode);
      }
      if (PhoneCode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PhoneCode);
      }
      if (GoogleCode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GoogleCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (EmailCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EmailCode);
      }
      if (PhoneCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneCode);
      }
      if (GoogleCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GoogleCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FactorListReq other) {
      if (other == null) {
        return;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.EmailCode.Length != 0) {
        EmailCode = other.EmailCode;
      }
      if (other.PhoneCode.Length != 0) {
        PhoneCode = other.PhoneCode;
      }
      if (other.GoogleCode.Length != 0) {
        GoogleCode = other.GoogleCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Email = input.ReadString();
            break;
          }
          case 18: {
            EmailCode = input.ReadString();
            break;
          }
          case 26: {
            PhoneCode = input.ReadString();
            break;
          }
          case 34: {
            GoogleCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VerifyFactorsReply : pb::IMessage<VerifyFactorsReply> {
    private static readonly pb::MessageParser<VerifyFactorsReply> _parser = new pb::MessageParser<VerifyFactorsReply>(() => new VerifyFactorsReply());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerifyFactorsReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.TwoFactorReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyFactorsReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyFactorsReply(VerifyFactorsReply other) : this() {
      code_ = other.code_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyFactorsReply Clone() {
      return new VerifyFactorsReply(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private string code_ = "";
    /// <summary>
    ///返回更新密码凭证信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerifyFactorsReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerifyFactorsReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerifyFactorsReply other) {
      if (other == null) {
        return;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Response
  /// </summary>
  public sealed partial class VerifyReply : pb::IMessage<VerifyReply> {
    private static readonly pb::MessageParser<VerifyReply> _parser = new pb::MessageParser<VerifyReply>(() => new VerifyReply());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerifyReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.TwoFactorReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyReply(VerifyReply other) : this() {
      result_ = other.result_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyReply Clone() {
      return new VerifyReply(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerifyReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerifyReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerifyReply other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FactorReply : pb::IMessage<FactorReply> {
    private static readonly pb::MessageParser<FactorReply> _parser = new pb::MessageParser<FactorReply>(() => new FactorReply());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FactorReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.TwoFactorReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FactorReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FactorReply(FactorReply other) : this() {
      id_ = other.id_;
      userId_ = other.userId_;
      code_ = other.code_;
      activated_ = other.activated_;
      lastVerifyAt_ = other.lastVerifyAt_;
      refreshedAt_ = other.refreshedAt_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FactorReply Clone() {
      return new FactorReply(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private long userId_;
    /// <summary>
    ///用户Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 3;
    private string code_ = "";
    /// <summary>
    ///验证码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "activated" field.</summary>
    public const int ActivatedFieldNumber = 4;
    private global::Proto.BoolValue activated_ = 0;
    /// <summary>
    ///是否激活
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.BoolValue Activated {
      get { return activated_; }
      set {
        activated_ = value;
      }
    }

    /// <summary>Field number for the "lastVerifyAt" field.</summary>
    public const int LastVerifyAtFieldNumber = 5;
    private string lastVerifyAt_ = "";
    /// <summary>
    ///最迟激活时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastVerifyAt {
      get { return lastVerifyAt_; }
      set {
        lastVerifyAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "refreshedAt" field.</summary>
    public const int RefreshedAtFieldNumber = 6;
    private string refreshedAt_ = "";
    /// <summary>
    ///刷新时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RefreshedAt {
      get { return refreshedAt_; }
      set {
        refreshedAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FactorReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FactorReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (UserId != other.UserId) return false;
      if (Code != other.Code) return false;
      if (Activated != other.Activated) return false;
      if (LastVerifyAt != other.LastVerifyAt) return false;
      if (RefreshedAt != other.RefreshedAt) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (UserId != 0L) hash ^= UserId.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (Activated != 0) hash ^= Activated.GetHashCode();
      if (LastVerifyAt.Length != 0) hash ^= LastVerifyAt.GetHashCode();
      if (RefreshedAt.Length != 0) hash ^= RefreshedAt.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (UserId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UserId);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Code);
      }
      if (Activated != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Activated);
      }
      if (LastVerifyAt.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LastVerifyAt);
      }
      if (RefreshedAt.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RefreshedAt);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (UserId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserId);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (Activated != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Activated);
      }
      if (LastVerifyAt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastVerifyAt);
      }
      if (RefreshedAt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RefreshedAt);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FactorReply other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.UserId != 0L) {
        UserId = other.UserId;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.Activated != 0) {
        Activated = other.Activated;
      }
      if (other.LastVerifyAt.Length != 0) {
        LastVerifyAt = other.LastVerifyAt;
      }
      if (other.RefreshedAt.Length != 0) {
        RefreshedAt = other.RefreshedAt;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            UserId = input.ReadInt64();
            break;
          }
          case 26: {
            Code = input.ReadString();
            break;
          }
          case 32: {
            activated_ = (global::Proto.BoolValue) input.ReadEnum();
            break;
          }
          case 42: {
            LastVerifyAt = input.ReadString();
            break;
          }
          case 50: {
            RefreshedAt = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
