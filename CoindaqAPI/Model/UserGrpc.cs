// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user.proto
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace Proto {
  /// <summary>
  ///*
  /// User Service Grpc API
  /// </summary>
  public static partial class UserService
  {
    static readonly string __ServiceName = "proto.UserService";

    static readonly grpc::Marshaller<global::Proto.RegisterReq> __Marshaller_RegisterReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.RegisterReq.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.UserReply> __Marshaller_UserReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.UserReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.AuthReq> __Marshaller_AuthReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.AuthReq.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.ForgetEmailReq> __Marshaller_ForgetEmailReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.ForgetEmailReq.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.UserStatusReply> __Marshaller_UserStatusReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.UserStatusReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.UserReq> __Marshaller_UserReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.UserReq.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.RecordFilterReq> __Marshaller_RecordFilterReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.RecordFilterReq.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.LoginRecordListReply> __Marshaller_LoginRecordListReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.LoginRecordListReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.IdReq> __Marshaller_IdReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.IdReq.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.Empty> __Marshaller_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.FactorReply> __Marshaller_FactorReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.FactorReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.ActivateReq> __Marshaller_ActivateReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.ActivateReq.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.ForgetReply> __Marshaller_ForgetReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.ForgetReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.ForgetPhoneReq> __Marshaller_ForgetPhoneReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.ForgetPhoneReq.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.RecordMessageReq> __Marshaller_RecordMessageReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.RecordMessageReq.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.MessageCountReply> __Marshaller_MessageCountReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.MessageCountReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.ModifyPasswordReq> __Marshaller_ModifyPasswordReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.ModifyPasswordReq.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.UpdatePasswordReq> __Marshaller_UpdatePasswordReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.UpdatePasswordReq.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.ModifyUserReq> __Marshaller_ModifyUserReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.ModifyUserReq.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.SendMessageReq> __Marshaller_SendMessageReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.SendMessageReq.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.BindPhoneReq> __Marshaller_BindPhoneReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.BindPhoneReq.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.QueryUserReq> __Marshaller_QueryUserReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.QueryUserReq.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.UserListReply> __Marshaller_UserListReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.UserListReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.InviterInfoReply> __Marshaller_InviterInfoReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.InviterInfoReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.PaymentPasswordReq> __Marshaller_PaymentPasswordReq = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.PaymentPasswordReq.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.BoolReply> __Marshaller_BoolReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.BoolReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.GoogleQRCodeRelpy> __Marshaller_GoogleQRCodeRelpy = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.GoogleQRCodeRelpy.Parser.ParseFrom);

    static readonly grpc::Method<global::Proto.RegisterReq, global::Proto.UserReply> __Method_Signup = new grpc::Method<global::Proto.RegisterReq, global::Proto.UserReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Signup",
        __Marshaller_RegisterReq,
        __Marshaller_UserReply);

    static readonly grpc::Method<global::Proto.AuthReq, global::Proto.UserReply> __Method_Signin = new grpc::Method<global::Proto.AuthReq, global::Proto.UserReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Signin",
        __Marshaller_AuthReq,
        __Marshaller_UserReply);

    static readonly grpc::Method<global::Proto.ForgetEmailReq, global::Proto.UserStatusReply> __Method_CheckUserStatus = new grpc::Method<global::Proto.ForgetEmailReq, global::Proto.UserStatusReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckUserStatus",
        __Marshaller_ForgetEmailReq,
        __Marshaller_UserStatusReply);

    static readonly grpc::Method<global::Proto.UserReq, global::Proto.UserReply> __Method_VerifyUserToken = new grpc::Method<global::Proto.UserReq, global::Proto.UserReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VerifyUserToken",
        __Marshaller_UserReq,
        __Marshaller_UserReply);

    static readonly grpc::Method<global::Proto.RecordFilterReq, global::Proto.LoginRecordListReply> __Method_QueryLoginRecords = new grpc::Method<global::Proto.RecordFilterReq, global::Proto.LoginRecordListReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryLoginRecords",
        __Marshaller_RecordFilterReq,
        __Marshaller_LoginRecordListReply);

    static readonly grpc::Method<global::Proto.IdReq, global::Proto.Empty> __Method_Logout = new grpc::Method<global::Proto.IdReq, global::Proto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Logout",
        __Marshaller_IdReq,
        __Marshaller_Empty);

    static readonly grpc::Method<global::Proto.ForgetEmailReq, global::Proto.FactorReply> __Method_ActivateNewUser = new grpc::Method<global::Proto.ForgetEmailReq, global::Proto.FactorReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ActivateNewUser",
        __Marshaller_ForgetEmailReq,
        __Marshaller_FactorReply);

    static readonly grpc::Method<global::Proto.ActivateReq, global::Proto.Empty> __Method_ActivateEmailUser = new grpc::Method<global::Proto.ActivateReq, global::Proto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ActivateEmailUser",
        __Marshaller_ActivateReq,
        __Marshaller_Empty);

    static readonly grpc::Method<global::Proto.ForgetEmailReq, global::Proto.ForgetReply> __Method_ForgetPasswordViaEmail = new grpc::Method<global::Proto.ForgetEmailReq, global::Proto.ForgetReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ForgetPasswordViaEmail",
        __Marshaller_ForgetEmailReq,
        __Marshaller_ForgetReply);

    static readonly grpc::Method<global::Proto.ForgetPhoneReq, global::Proto.ForgetReply> __Method_ForgetPasswordViaPhone = new grpc::Method<global::Proto.ForgetPhoneReq, global::Proto.ForgetReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ForgetPasswordViaPhone",
        __Marshaller_ForgetPhoneReq,
        __Marshaller_ForgetReply);

    static readonly grpc::Method<global::Proto.RecordMessageReq, global::Proto.Empty> __Method_RecordMessageInfo = new grpc::Method<global::Proto.RecordMessageReq, global::Proto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RecordMessageInfo",
        __Marshaller_RecordMessageReq,
        __Marshaller_Empty);

    static readonly grpc::Method<global::Proto.ForgetPhoneReq, global::Proto.MessageCountReply> __Method_MessageInHour = new grpc::Method<global::Proto.ForgetPhoneReq, global::Proto.MessageCountReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MessageInHour",
        __Marshaller_ForgetPhoneReq,
        __Marshaller_MessageCountReply);

    static readonly grpc::Method<global::Proto.ModifyPasswordReq, global::Proto.Empty> __Method_ResetPassword = new grpc::Method<global::Proto.ModifyPasswordReq, global::Proto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetPassword",
        __Marshaller_ModifyPasswordReq,
        __Marshaller_Empty);

    static readonly grpc::Method<global::Proto.UpdatePasswordReq, global::Proto.Empty> __Method_UpdatePassword = new grpc::Method<global::Proto.UpdatePasswordReq, global::Proto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdatePassword",
        __Marshaller_UpdatePasswordReq,
        __Marshaller_Empty);

    static readonly grpc::Method<global::Proto.ModifyUserReq, global::Proto.Empty> __Method_UpdateUserInfo = new grpc::Method<global::Proto.ModifyUserReq, global::Proto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateUserInfo",
        __Marshaller_ModifyUserReq,
        __Marshaller_Empty);

    static readonly grpc::Method<global::Proto.SendMessageReq, global::Proto.FactorReply> __Method_SendBindMessage = new grpc::Method<global::Proto.SendMessageReq, global::Proto.FactorReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendBindMessage",
        __Marshaller_SendMessageReq,
        __Marshaller_FactorReply);

    static readonly grpc::Method<global::Proto.BindPhoneReq, global::Proto.Empty> __Method_BindUserPhone = new grpc::Method<global::Proto.BindPhoneReq, global::Proto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BindUserPhone",
        __Marshaller_BindPhoneReq,
        __Marshaller_Empty);

    static readonly grpc::Method<global::Proto.IdReq, global::Proto.UserReply> __Method_QueryUserById = new grpc::Method<global::Proto.IdReq, global::Proto.UserReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryUserById",
        __Marshaller_IdReq,
        __Marshaller_UserReply);

    static readonly grpc::Method<global::Proto.QueryUserReq, global::Proto.UserListReply> __Method_QueryUsers = new grpc::Method<global::Proto.QueryUserReq, global::Proto.UserListReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryUsers",
        __Marshaller_QueryUserReq,
        __Marshaller_UserListReply);

    static readonly grpc::Method<global::Proto.IdReq, global::Proto.UserListReply> __Method_QueryInvitedUsersByInvitorId = new grpc::Method<global::Proto.IdReq, global::Proto.UserListReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryInvitedUsersByInvitorId",
        __Marshaller_IdReq,
        __Marshaller_UserListReply);

    static readonly grpc::Method<global::Proto.IdReq, global::Proto.InviterInfoReply> __Method_QueryInvitorInfoById = new grpc::Method<global::Proto.IdReq, global::Proto.InviterInfoReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryInvitorInfoById",
        __Marshaller_IdReq,
        __Marshaller_InviterInfoReply);

    static readonly grpc::Method<global::Proto.PaymentPasswordReq, global::Proto.Empty> __Method_UpdatePaymentPassword = new grpc::Method<global::Proto.PaymentPasswordReq, global::Proto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdatePaymentPassword",
        __Marshaller_PaymentPasswordReq,
        __Marshaller_Empty);

    static readonly grpc::Method<global::Proto.PaymentPasswordReq, global::Proto.BoolReply> __Method_VerifyPaymentPassword = new grpc::Method<global::Proto.PaymentPasswordReq, global::Proto.BoolReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VerifyPaymentPassword",
        __Marshaller_PaymentPasswordReq,
        __Marshaller_BoolReply);

    static readonly grpc::Method<global::Proto.IdReq, global::Proto.BoolReply> __Method_VerifyFinancialOperation = new grpc::Method<global::Proto.IdReq, global::Proto.BoolReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VerifyFinancialOperation",
        __Marshaller_IdReq,
        __Marshaller_BoolReply);

    static readonly grpc::Method<global::Proto.IdReq, global::Proto.GoogleQRCodeRelpy> __Method_BindUserGoogleFactor = new grpc::Method<global::Proto.IdReq, global::Proto.GoogleQRCodeRelpy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BindUserGoogleFactor",
        __Marshaller_IdReq,
        __Marshaller_GoogleQRCodeRelpy);

    static readonly grpc::Method<global::Proto.IdReq, global::Proto.Empty> __Method_RemoveBindGoogleFactor = new grpc::Method<global::Proto.IdReq, global::Proto.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveBindGoogleFactor",
        __Marshaller_IdReq,
        __Marshaller_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Proto.UserReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of UserService</summary>
    public abstract partial class UserServiceBase
    {
      /// <summary>
      ///*
      /// 注册新用户[POST]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.UserReply> Signup(global::Proto.RegisterReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      /// 登录用户[POST]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.UserReply> Signin(global::Proto.AuthReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      /// 检查用户状态 - GET
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.UserStatusReply> CheckUserStatus(global::Proto.ForgetEmailReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      /// 用户token验证[POST]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.UserReply> VerifyUserToken(global::Proto.UserReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      /// 查询登录历史记录[GET]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.LoginRecordListReply> QueryLoginRecords(global::Proto.RecordFilterReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      /// 退出登录[GET]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.Empty> Logout(global::Proto.IdReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      /// 激活新用户[GET]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.FactorReply> ActivateNewUser(global::Proto.ForgetEmailReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      /// 激活用户 - 邮件接口[GET]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.Empty> ActivateEmailUser(global::Proto.ActivateReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      /// 通过邮箱找回密码[POST]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.ForgetReply> ForgetPasswordViaEmail(global::Proto.ForgetEmailReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      /// 通过手机找回密码[POST]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.ForgetReply> ForgetPasswordViaPhone(global::Proto.ForgetPhoneReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      /// 添加发送短信记录[POST]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.Empty> RecordMessageInfo(global::Proto.RecordMessageReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      /// 查询一小时内发送短信条数[GET]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.MessageCountReply> MessageInHour(global::Proto.ForgetPhoneReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      /// 重新设置密码[PUT]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.Empty> ResetPassword(global::Proto.ModifyPasswordReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      /// 更新密码[PUT]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.Empty> UpdatePassword(global::Proto.UpdatePasswordReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      /// 更新用户信息[POST]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.Empty> UpdateUserInfo(global::Proto.ModifyUserReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      /// 绑定手机号-发送短信[POST]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.FactorReply> SendBindMessage(global::Proto.SendMessageReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      /// 用户绑定手机号码[PUT]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.Empty> BindUserPhone(global::Proto.BindPhoneReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      /// 通过Id查询用户[GET]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.UserReply> QueryUserById(global::Proto.IdReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      /// 用户筛选[GET]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.UserListReply> QueryUsers(global::Proto.QueryUserReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      /// 查询用户邀请的注册用户[GET]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.UserListReply> QueryInvitedUsersByInvitorId(global::Proto.IdReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      /// 通过Id查询邀请用户[GET]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.InviterInfoReply> QueryInvitorInfoById(global::Proto.IdReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      /// 更新用户支付密码
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.Empty> UpdatePaymentPassword(global::Proto.PaymentPasswordReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      /// 验证用户支付密码
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.BoolReply> VerifyPaymentPassword(global::Proto.PaymentPasswordReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      /// 验证用户金融操作是否可用
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.BoolReply> VerifyFinancialOperation(global::Proto.IdReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      /// 绑定用户Google二次验证
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.GoogleQRCodeRelpy> BindUserGoogleFactor(global::Proto.IdReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///*
      /// 解除绑定Google二次验证
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Proto.Empty> RemoveBindGoogleFactor(global::Proto.IdReq request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for UserService</summary>
    public partial class UserServiceClient : grpc::ClientBase<UserServiceClient>
    {
      /// <summary>Creates a new client for UserService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public UserServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for UserService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public UserServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected UserServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected UserServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///*
      /// 注册新用户[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.UserReply Signup(global::Proto.RegisterReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Signup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 注册新用户[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.UserReply Signup(global::Proto.RegisterReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Signup, null, options, request);
      }
      /// <summary>
      ///*
      /// 注册新用户[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.UserReply> SignupAsync(global::Proto.RegisterReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SignupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 注册新用户[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.UserReply> SignupAsync(global::Proto.RegisterReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Signup, null, options, request);
      }
      /// <summary>
      ///*
      /// 登录用户[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.UserReply Signin(global::Proto.AuthReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Signin(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 登录用户[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.UserReply Signin(global::Proto.AuthReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Signin, null, options, request);
      }
      /// <summary>
      ///*
      /// 登录用户[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.UserReply> SigninAsync(global::Proto.AuthReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SigninAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 登录用户[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.UserReply> SigninAsync(global::Proto.AuthReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Signin, null, options, request);
      }
      /// <summary>
      ///*
      /// 检查用户状态 - GET
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.UserStatusReply CheckUserStatus(global::Proto.ForgetEmailReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CheckUserStatus(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 检查用户状态 - GET
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.UserStatusReply CheckUserStatus(global::Proto.ForgetEmailReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckUserStatus, null, options, request);
      }
      /// <summary>
      ///*
      /// 检查用户状态 - GET
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.UserStatusReply> CheckUserStatusAsync(global::Proto.ForgetEmailReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CheckUserStatusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 检查用户状态 - GET
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.UserStatusReply> CheckUserStatusAsync(global::Proto.ForgetEmailReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckUserStatus, null, options, request);
      }
      /// <summary>
      ///*
      /// 用户token验证[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.UserReply VerifyUserToken(global::Proto.UserReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return VerifyUserToken(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 用户token验证[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.UserReply VerifyUserToken(global::Proto.UserReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_VerifyUserToken, null, options, request);
      }
      /// <summary>
      ///*
      /// 用户token验证[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.UserReply> VerifyUserTokenAsync(global::Proto.UserReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return VerifyUserTokenAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 用户token验证[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.UserReply> VerifyUserTokenAsync(global::Proto.UserReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_VerifyUserToken, null, options, request);
      }
      /// <summary>
      ///*
      /// 查询登录历史记录[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.LoginRecordListReply QueryLoginRecords(global::Proto.RecordFilterReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return QueryLoginRecords(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 查询登录历史记录[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.LoginRecordListReply QueryLoginRecords(global::Proto.RecordFilterReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryLoginRecords, null, options, request);
      }
      /// <summary>
      ///*
      /// 查询登录历史记录[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.LoginRecordListReply> QueryLoginRecordsAsync(global::Proto.RecordFilterReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return QueryLoginRecordsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 查询登录历史记录[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.LoginRecordListReply> QueryLoginRecordsAsync(global::Proto.RecordFilterReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryLoginRecords, null, options, request);
      }
      /// <summary>
      ///*
      /// 退出登录[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.Empty Logout(global::Proto.IdReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Logout(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 退出登录[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.Empty Logout(global::Proto.IdReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Logout, null, options, request);
      }
      /// <summary>
      ///*
      /// 退出登录[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.Empty> LogoutAsync(global::Proto.IdReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return LogoutAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 退出登录[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.Empty> LogoutAsync(global::Proto.IdReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Logout, null, options, request);
      }
      /// <summary>
      ///*
      /// 激活新用户[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.FactorReply ActivateNewUser(global::Proto.ForgetEmailReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ActivateNewUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 激活新用户[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.FactorReply ActivateNewUser(global::Proto.ForgetEmailReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ActivateNewUser, null, options, request);
      }
      /// <summary>
      ///*
      /// 激活新用户[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.FactorReply> ActivateNewUserAsync(global::Proto.ForgetEmailReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ActivateNewUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 激活新用户[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.FactorReply> ActivateNewUserAsync(global::Proto.ForgetEmailReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ActivateNewUser, null, options, request);
      }
      /// <summary>
      ///*
      /// 激活用户 - 邮件接口[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.Empty ActivateEmailUser(global::Proto.ActivateReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ActivateEmailUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 激活用户 - 邮件接口[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.Empty ActivateEmailUser(global::Proto.ActivateReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ActivateEmailUser, null, options, request);
      }
      /// <summary>
      ///*
      /// 激活用户 - 邮件接口[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.Empty> ActivateEmailUserAsync(global::Proto.ActivateReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ActivateEmailUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 激活用户 - 邮件接口[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.Empty> ActivateEmailUserAsync(global::Proto.ActivateReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ActivateEmailUser, null, options, request);
      }
      /// <summary>
      ///*
      /// 通过邮箱找回密码[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.ForgetReply ForgetPasswordViaEmail(global::Proto.ForgetEmailReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ForgetPasswordViaEmail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 通过邮箱找回密码[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.ForgetReply ForgetPasswordViaEmail(global::Proto.ForgetEmailReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ForgetPasswordViaEmail, null, options, request);
      }
      /// <summary>
      ///*
      /// 通过邮箱找回密码[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.ForgetReply> ForgetPasswordViaEmailAsync(global::Proto.ForgetEmailReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ForgetPasswordViaEmailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 通过邮箱找回密码[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.ForgetReply> ForgetPasswordViaEmailAsync(global::Proto.ForgetEmailReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ForgetPasswordViaEmail, null, options, request);
      }
      /// <summary>
      ///*
      /// 通过手机找回密码[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.ForgetReply ForgetPasswordViaPhone(global::Proto.ForgetPhoneReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ForgetPasswordViaPhone(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 通过手机找回密码[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.ForgetReply ForgetPasswordViaPhone(global::Proto.ForgetPhoneReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ForgetPasswordViaPhone, null, options, request);
      }
      /// <summary>
      ///*
      /// 通过手机找回密码[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.ForgetReply> ForgetPasswordViaPhoneAsync(global::Proto.ForgetPhoneReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ForgetPasswordViaPhoneAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 通过手机找回密码[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.ForgetReply> ForgetPasswordViaPhoneAsync(global::Proto.ForgetPhoneReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ForgetPasswordViaPhone, null, options, request);
      }
      /// <summary>
      ///*
      /// 添加发送短信记录[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.Empty RecordMessageInfo(global::Proto.RecordMessageReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RecordMessageInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 添加发送短信记录[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.Empty RecordMessageInfo(global::Proto.RecordMessageReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RecordMessageInfo, null, options, request);
      }
      /// <summary>
      ///*
      /// 添加发送短信记录[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.Empty> RecordMessageInfoAsync(global::Proto.RecordMessageReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RecordMessageInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 添加发送短信记录[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.Empty> RecordMessageInfoAsync(global::Proto.RecordMessageReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RecordMessageInfo, null, options, request);
      }
      /// <summary>
      ///*
      /// 查询一小时内发送短信条数[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.MessageCountReply MessageInHour(global::Proto.ForgetPhoneReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return MessageInHour(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 查询一小时内发送短信条数[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.MessageCountReply MessageInHour(global::Proto.ForgetPhoneReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MessageInHour, null, options, request);
      }
      /// <summary>
      ///*
      /// 查询一小时内发送短信条数[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.MessageCountReply> MessageInHourAsync(global::Proto.ForgetPhoneReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return MessageInHourAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 查询一小时内发送短信条数[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.MessageCountReply> MessageInHourAsync(global::Proto.ForgetPhoneReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MessageInHour, null, options, request);
      }
      /// <summary>
      ///*
      /// 重新设置密码[PUT]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.Empty ResetPassword(global::Proto.ModifyPasswordReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ResetPassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 重新设置密码[PUT]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.Empty ResetPassword(global::Proto.ModifyPasswordReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetPassword, null, options, request);
      }
      /// <summary>
      ///*
      /// 重新设置密码[PUT]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.Empty> ResetPasswordAsync(global::Proto.ModifyPasswordReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ResetPasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 重新设置密码[PUT]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.Empty> ResetPasswordAsync(global::Proto.ModifyPasswordReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetPassword, null, options, request);
      }
      /// <summary>
      ///*
      /// 更新密码[PUT]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.Empty UpdatePassword(global::Proto.UpdatePasswordReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdatePassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 更新密码[PUT]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.Empty UpdatePassword(global::Proto.UpdatePasswordReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdatePassword, null, options, request);
      }
      /// <summary>
      ///*
      /// 更新密码[PUT]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.Empty> UpdatePasswordAsync(global::Proto.UpdatePasswordReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdatePasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 更新密码[PUT]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.Empty> UpdatePasswordAsync(global::Proto.UpdatePasswordReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdatePassword, null, options, request);
      }
      /// <summary>
      ///*
      /// 更新用户信息[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.Empty UpdateUserInfo(global::Proto.ModifyUserReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateUserInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 更新用户信息[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.Empty UpdateUserInfo(global::Proto.ModifyUserReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateUserInfo, null, options, request);
      }
      /// <summary>
      ///*
      /// 更新用户信息[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.Empty> UpdateUserInfoAsync(global::Proto.ModifyUserReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateUserInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 更新用户信息[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.Empty> UpdateUserInfoAsync(global::Proto.ModifyUserReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateUserInfo, null, options, request);
      }
      /// <summary>
      ///*
      /// 绑定手机号-发送短信[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.FactorReply SendBindMessage(global::Proto.SendMessageReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SendBindMessage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 绑定手机号-发送短信[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.FactorReply SendBindMessage(global::Proto.SendMessageReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendBindMessage, null, options, request);
      }
      /// <summary>
      ///*
      /// 绑定手机号-发送短信[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.FactorReply> SendBindMessageAsync(global::Proto.SendMessageReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SendBindMessageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 绑定手机号-发送短信[POST]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.FactorReply> SendBindMessageAsync(global::Proto.SendMessageReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendBindMessage, null, options, request);
      }
      /// <summary>
      ///*
      /// 用户绑定手机号码[PUT]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.Empty BindUserPhone(global::Proto.BindPhoneReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return BindUserPhone(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 用户绑定手机号码[PUT]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.Empty BindUserPhone(global::Proto.BindPhoneReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BindUserPhone, null, options, request);
      }
      /// <summary>
      ///*
      /// 用户绑定手机号码[PUT]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.Empty> BindUserPhoneAsync(global::Proto.BindPhoneReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return BindUserPhoneAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 用户绑定手机号码[PUT]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.Empty> BindUserPhoneAsync(global::Proto.BindPhoneReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BindUserPhone, null, options, request);
      }
      /// <summary>
      ///*
      /// 通过Id查询用户[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.UserReply QueryUserById(global::Proto.IdReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return QueryUserById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 通过Id查询用户[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.UserReply QueryUserById(global::Proto.IdReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryUserById, null, options, request);
      }
      /// <summary>
      ///*
      /// 通过Id查询用户[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.UserReply> QueryUserByIdAsync(global::Proto.IdReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return QueryUserByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 通过Id查询用户[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.UserReply> QueryUserByIdAsync(global::Proto.IdReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryUserById, null, options, request);
      }
      /// <summary>
      ///*
      /// 用户筛选[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.UserListReply QueryUsers(global::Proto.QueryUserReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return QueryUsers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 用户筛选[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.UserListReply QueryUsers(global::Proto.QueryUserReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryUsers, null, options, request);
      }
      /// <summary>
      ///*
      /// 用户筛选[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.UserListReply> QueryUsersAsync(global::Proto.QueryUserReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return QueryUsersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 用户筛选[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.UserListReply> QueryUsersAsync(global::Proto.QueryUserReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryUsers, null, options, request);
      }
      /// <summary>
      ///*
      /// 查询用户邀请的注册用户[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.UserListReply QueryInvitedUsersByInvitorId(global::Proto.IdReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return QueryInvitedUsersByInvitorId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 查询用户邀请的注册用户[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.UserListReply QueryInvitedUsersByInvitorId(global::Proto.IdReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryInvitedUsersByInvitorId, null, options, request);
      }
      /// <summary>
      ///*
      /// 查询用户邀请的注册用户[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.UserListReply> QueryInvitedUsersByInvitorIdAsync(global::Proto.IdReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return QueryInvitedUsersByInvitorIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 查询用户邀请的注册用户[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.UserListReply> QueryInvitedUsersByInvitorIdAsync(global::Proto.IdReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryInvitedUsersByInvitorId, null, options, request);
      }
      /// <summary>
      ///*
      /// 通过Id查询邀请用户[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.InviterInfoReply QueryInvitorInfoById(global::Proto.IdReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return QueryInvitorInfoById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 通过Id查询邀请用户[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.InviterInfoReply QueryInvitorInfoById(global::Proto.IdReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryInvitorInfoById, null, options, request);
      }
      /// <summary>
      ///*
      /// 通过Id查询邀请用户[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.InviterInfoReply> QueryInvitorInfoByIdAsync(global::Proto.IdReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return QueryInvitorInfoByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 通过Id查询邀请用户[GET]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.InviterInfoReply> QueryInvitorInfoByIdAsync(global::Proto.IdReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryInvitorInfoById, null, options, request);
      }
      /// <summary>
      ///*
      /// 更新用户支付密码
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.Empty UpdatePaymentPassword(global::Proto.PaymentPasswordReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdatePaymentPassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 更新用户支付密码
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.Empty UpdatePaymentPassword(global::Proto.PaymentPasswordReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdatePaymentPassword, null, options, request);
      }
      /// <summary>
      ///*
      /// 更新用户支付密码
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.Empty> UpdatePaymentPasswordAsync(global::Proto.PaymentPasswordReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdatePaymentPasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 更新用户支付密码
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.Empty> UpdatePaymentPasswordAsync(global::Proto.PaymentPasswordReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdatePaymentPassword, null, options, request);
      }
      /// <summary>
      ///*
      /// 验证用户支付密码
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.BoolReply VerifyPaymentPassword(global::Proto.PaymentPasswordReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return VerifyPaymentPassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 验证用户支付密码
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.BoolReply VerifyPaymentPassword(global::Proto.PaymentPasswordReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_VerifyPaymentPassword, null, options, request);
      }
      /// <summary>
      ///*
      /// 验证用户支付密码
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.BoolReply> VerifyPaymentPasswordAsync(global::Proto.PaymentPasswordReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return VerifyPaymentPasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 验证用户支付密码
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.BoolReply> VerifyPaymentPasswordAsync(global::Proto.PaymentPasswordReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_VerifyPaymentPassword, null, options, request);
      }
      /// <summary>
      ///*
      /// 验证用户金融操作是否可用
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.BoolReply VerifyFinancialOperation(global::Proto.IdReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return VerifyFinancialOperation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 验证用户金融操作是否可用
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.BoolReply VerifyFinancialOperation(global::Proto.IdReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_VerifyFinancialOperation, null, options, request);
      }
      /// <summary>
      ///*
      /// 验证用户金融操作是否可用
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.BoolReply> VerifyFinancialOperationAsync(global::Proto.IdReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return VerifyFinancialOperationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 验证用户金融操作是否可用
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.BoolReply> VerifyFinancialOperationAsync(global::Proto.IdReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_VerifyFinancialOperation, null, options, request);
      }
      /// <summary>
      ///*
      /// 绑定用户Google二次验证
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.GoogleQRCodeRelpy BindUserGoogleFactor(global::Proto.IdReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return BindUserGoogleFactor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 绑定用户Google二次验证
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.GoogleQRCodeRelpy BindUserGoogleFactor(global::Proto.IdReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BindUserGoogleFactor, null, options, request);
      }
      /// <summary>
      ///*
      /// 绑定用户Google二次验证
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.GoogleQRCodeRelpy> BindUserGoogleFactorAsync(global::Proto.IdReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return BindUserGoogleFactorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 绑定用户Google二次验证
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.GoogleQRCodeRelpy> BindUserGoogleFactorAsync(global::Proto.IdReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BindUserGoogleFactor, null, options, request);
      }
      /// <summary>
      ///*
      /// 解除绑定Google二次验证
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.Empty RemoveBindGoogleFactor(global::Proto.IdReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RemoveBindGoogleFactor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 解除绑定Google二次验证
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Proto.Empty RemoveBindGoogleFactor(global::Proto.IdReq request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveBindGoogleFactor, null, options, request);
      }
      /// <summary>
      ///*
      /// 解除绑定Google二次验证
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.Empty> RemoveBindGoogleFactorAsync(global::Proto.IdReq request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RemoveBindGoogleFactorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///*
      /// 解除绑定Google二次验证
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Proto.Empty> RemoveBindGoogleFactorAsync(global::Proto.IdReq request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveBindGoogleFactor, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override UserServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new UserServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(UserServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Signup, serviceImpl.Signup)
          .AddMethod(__Method_Signin, serviceImpl.Signin)
          .AddMethod(__Method_CheckUserStatus, serviceImpl.CheckUserStatus)
          .AddMethod(__Method_VerifyUserToken, serviceImpl.VerifyUserToken)
          .AddMethod(__Method_QueryLoginRecords, serviceImpl.QueryLoginRecords)
          .AddMethod(__Method_Logout, serviceImpl.Logout)
          .AddMethod(__Method_ActivateNewUser, serviceImpl.ActivateNewUser)
          .AddMethod(__Method_ActivateEmailUser, serviceImpl.ActivateEmailUser)
          .AddMethod(__Method_ForgetPasswordViaEmail, serviceImpl.ForgetPasswordViaEmail)
          .AddMethod(__Method_ForgetPasswordViaPhone, serviceImpl.ForgetPasswordViaPhone)
          .AddMethod(__Method_RecordMessageInfo, serviceImpl.RecordMessageInfo)
          .AddMethod(__Method_MessageInHour, serviceImpl.MessageInHour)
          .AddMethod(__Method_ResetPassword, serviceImpl.ResetPassword)
          .AddMethod(__Method_UpdatePassword, serviceImpl.UpdatePassword)
          .AddMethod(__Method_UpdateUserInfo, serviceImpl.UpdateUserInfo)
          .AddMethod(__Method_SendBindMessage, serviceImpl.SendBindMessage)
          .AddMethod(__Method_BindUserPhone, serviceImpl.BindUserPhone)
          .AddMethod(__Method_QueryUserById, serviceImpl.QueryUserById)
          .AddMethod(__Method_QueryUsers, serviceImpl.QueryUsers)
          .AddMethod(__Method_QueryInvitedUsersByInvitorId, serviceImpl.QueryInvitedUsersByInvitorId)
          .AddMethod(__Method_QueryInvitorInfoById, serviceImpl.QueryInvitorInfoById)
          .AddMethod(__Method_UpdatePaymentPassword, serviceImpl.UpdatePaymentPassword)
          .AddMethod(__Method_VerifyPaymentPassword, serviceImpl.VerifyPaymentPassword)
          .AddMethod(__Method_VerifyFinancialOperation, serviceImpl.VerifyFinancialOperation)
          .AddMethod(__Method_BindUserGoogleFactor, serviceImpl.BindUserGoogleFactor)
          .AddMethod(__Method_RemoveBindGoogleFactor, serviceImpl.RemoveBindGoogleFactor).Build();
    }

  }
}
#endregion
